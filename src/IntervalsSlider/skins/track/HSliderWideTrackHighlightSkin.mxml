<?xml version="1.0" encoding="utf-8"?>

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the track of a Spark HSlider component.

@see spark.components.HSlider
@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009" >
	
	<fx:Metadata>
		<![CDATA[
		/**
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("IntervalsSlider.supportClasses.SliderTrackHighlight")]
		]]>
	</fx:Metadata>
	
	<fx:Script fb:purpose="styling">
		
		<![CDATA[
			import IntervalsSlider.MultiThumbHSlider;
			import IntervalsSlider.SliderInfo;
			
			import flash.sampler.NewObjectSample;
			
			import mx.collections.ArrayList;
		
		[Bindable]
		private var highlightColor:uint;
			
		private var sliderInfo:SliderInfo = new SliderInfo();	
		private var sliderInfoArray:ArrayList = new ArrayList();
		private var slider:MultiThumbHSlider = new MultiThumbHSlider();
		
		/**
		 * @private
		 */
		override protected function initializationComplete():void
		{
			highlightColor = this.getStyle("themeColor");
			super.initializationComplete();
		}
		
		override public function styleChanged(styleProp:String):void
		{
			super.styleChanged(styleProp);
			
			if( styleProp == "themeColor" )
			{
				var trackHighlightColor:uint = this.getStyle("themeColor");
				highlightColor = trackHighlightColor;				
			}
		}		
		]]>
		
	</fx:Script>
	
	<s:states>
		<s:State name="disabled" />
		<s:State name="base" />
		<s:State name="edit" />
	</s:states>
	
	<!-- fill -->
	<s:Rect id="fill" left="1" right="1" top="4" bottom="4" 
			bottomLeftRadiusX="2" bottomLeftRadiusY="2" topLeftRadiusX="2" topLeftRadiusY="2"
			bottomRightRadiusX="0" bottomRightRadiusY="0" topRightRadiusX="0" topRightRadiusY="0" >
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="{highlightColor}" alpha="0.25" />
				<s:GradientEntry color="{highlightColor}" alpha="0.85" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<!-- label of the defined interval -->
	<s:TextInput id="labelEditor" left="1" right="1" top="4" bottom="4" borderVisible="false" borderVisible.edit="true" 
				 editable="false" editable.edit="false" textAlign="center" fontSize="9" contentBackgroundColor="white" 
				 alpha="0" />	
	
	<!-- label of the defined interval -->
	<!--s:TextInput id="labelEditor" borderVisible="false" borderVisible.edit="true" editable="false" 
				 editable.edit="false" textAlign="center" width="16" horizontalCenter="0"
				 fontWeight="bold" fontSize="9" bottom="-13" bottom.edit="-13" click="labelEditor_handler()"/-->
	
	<!-- hit area -->
	<s:Rect left="0" right="0" top="0" bottom="0">
		<s:fill>
			<s:SolidColor alpha="0"/>
		</s:fill>
	</s:Rect>
</s:SparkSkin>